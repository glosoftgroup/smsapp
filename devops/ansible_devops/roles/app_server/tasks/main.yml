---
# tasks file for app_server

- name: Install system packages
  apt: pkg={{ item }} state=present
  with_items:
    - default-jre
    - libjpeg-dev
    - libfreetype6-dev
    - zlib1g-dev
    - libxslt1-dev
    - build-essential
    - python-dev
    - python-boto
    - python-setuptools
    - python-pip
    - authbind
    - supervisor
    #- postfix
    - mercurial
    - rabbitmq-server
    - monit

- name: Ensure pip is up-to-date
  command: pip install --upgrade pip

- name: Install Python packages
  pip: name={{ item }}
  with_items:
    - virtualenv
    - virtualenvwrapper

#- name: Configure virtualenvwrapper
#  lineinfile: line="{{ item }}" dest={{ APP_HOME }}/.bashrc
#              backup=yes
#  with_items:
#    - export WORKON_HOME=$HOME/.virtualenvs
#    - source /usr/local/bin/virtualenvwrapper.sh


- name: Build dependencies for Python Postgres adapter
  command: sudo apt-get -y build-dep python-psycopg2

- name: Allow app to bind to port 80
  file: path=/etc/authbind/byport/80 state=touch
        owner={{ APP_USER }} group={{ APP_USER }} mode=755

- name: Write supervisord.conf
  template: dest=/etc/supervisor/supervisord.conf
            src=supervisord.conf.j2
            backup=yes

- name: Link to app-specific supervisor configuration
  file: >
    src={{ APP_DIR }}/supervisord.conf
    dest=/etc/supervisor/conf.d/{{ APP_NAME }}.conf
    state=link force=yes

- name: add celery_user user
  user: name={{ CELERY_USER }} groups=sudo
  when: ROOT_USER_BOX

- name: configure dhparams
  template: src=dhparam.pem dest=/etc/nginx/dhparam.pem
  notify: reload nginx
  tags:
    - nginx_conf

- name: configure jumo_certificate_bundle
  copy: src=jumo_certificate_bundle.pem dest=/etc/nginx/jumo_certificate_bundle.pem
  notify: reload nginx
  tags:
    - nginx_conf

- name: configure jumo_certificate_key
  copy: src=jumo_certificate_key.pem dest=/etc/nginx/jumo_certificate_key.pem
  notify: reload nginx
  tags:
    - nginx_conf

- name: Create nginx site configuration
  template: src=nginx.site.j2
            dest=/etc/nginx/sites-available/{{ APP_NAME }}
  notify:
    - reload nginx
  tags:
    - nginx_conf

- name: Create link to enable nginx site
  file: path=/etc/nginx/sites-enabled/{{ APP_NAME }}
        src=/etc/nginx/sites-available/{{ APP_NAME }}
        state=link
  notify:
    - reload nginx
  tags:
    - nginx_conf

- name: configure bash_aliases
  template: >
    src=../../../templates/bash_aliases
    dest=/home/vagrant/.bash_aliases
  when: APP_ENVIRONMENT == "development"
